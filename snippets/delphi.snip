#=============================================================================
# File:          delphi.snip
# Author:        Mattia72 
# Description:   Neosnippet defs for Delphi   
# Created:       01.04.2019
# Project Repo:  https://github.com/Mattia72/vim-delphi
#=============================================================================

# After select press Ctrl+k to trigger the snippet
# Ctrl+k jumps to the next field in the snippet

snippet     classunit  
abbr        new delphi unit 
alias       clsunit 
options     head
  unit `bufname('%') ==#'[Command Line]' ? expand('#:r') : expand('%:r')`${1}

  interface

  type ${2:name} = class(${3:base})
    ${0:content}
  end; 

  implementation

  end.

snippet     fileheader  
abbr        delphi unit header
alias       header header unitheader
options     head
  {**-----------------------------------------------------------------------------
 
    @file    `bufname('%') ==#'[Command Line]' ? expand('#:t') : expand('%:t')`${1}
 
    ${2:TODO: -- Add description --}
 
    (c) `strftime("%Y")`, ${3:company}
 
    @date    `strftime("%d.%m.%Y")`${4}
    @author  ${5:author}
 
  --------------------------------------------------------------------------------}

snippet     func  
abbr        delphi function definition 
alias       function fun
options     head
  function ${1:class_name}.${2:function_name}(${3:parameter_name}:${4:parameter_type}):${5:return_type};
  begin
    ${0:content}
  end; 

snippet     proc  
abbr        delphi function definition 
alias       procedure pro
options     head
  procedure ${1:class_name}.${2:procedure_name}(${3:parameter_name}:${4:parameter_type});
  begin
    ${0:content}
  end; 

snippet     record  
abbr        delphi record definition 
alias       rec
options     head
  type ${1:name} = record
    ${0:content}
  end; 

snippet     class
abbr        delphi class definition 
alias       cla
options     head
  type ${1:name} = class(${2:base})
    ${0:content}
  end; 

snippet     if
abbr        if new block
options     word indent
  if (${1:var}) then begin
    ${0}
  end;

snippet     ife
abbr        if else block
options     word indent
  if (${1:var}) then begin
    ${0}
  end else begin
  	${1}
  end;

snippet     ifs
abbr        if around selected block
options     word indent
  if (${1:var}) begin
    ${0:TARGET}
  end;

snippet     fori
abbr        simple for loop
alias       for
options     word indent
  for $1 := 0 to Length(${2:array}) do begin
    ${0}
  end;

snippet     while
abbr        simple for loop
alias       whi
options     word indent
  while ${1:expression} do begin
    ${0}
  end;

snippet     case
abbr        switch case 
alias       cas
options     word indent
	case ${1:expression} of
		${2:label}: ${3}
	  else
	  	${4}
	end;

